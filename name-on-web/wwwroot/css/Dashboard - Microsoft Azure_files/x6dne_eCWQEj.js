define("Shared/AdminUnit",["require","exports","f","o","ko","Shared/AjaxExtensions","Users/ViewModels/DirectoryRoles/RoleTemplateIds","Shared/Utilities"],(function(n,t,i,r,u,f,e,o){"use strict";r.defineProperty(t,"__esModule",{value:!0});var s=(function(){function n(){}return n.getCurrentAdminUnit=function(){return n._currentAdminUnit()},n.setCurrentAdminUnit=function(n){this._currentAdminUnit(n)},n.getAllAdminUnitsForCurrentTenant=function(t){return n._allAdminUnitsInCurrentTenantCache.fetch({},t)},n.refreshAllAmdinUnitsForCurrentTenant=function(t){return n._allAdminUnitsInCurrentTenantCache.refresh({},t)},n.getTemplateIdsForManagableDirectoryRolesInAdminUnit=function(){return[e.RoleTemplateIds.HelpDeskAdministrator,e.RoleTemplateIds.UserAccountAdministrator]},n})();s.AdminUnitsAllUsersDefaultValue="";s.AdminUnitsAllGroupsDefaultValue="";s.AdminUnitsDefaultValue="";s._getAllAdminUnitsUri=i.Base.Resources.getAppRelativeUri("/api/AdministrativeUnit");s._currentAdminUnit=u.observable("");s._businessScenarios=o.getBusinessScenarios();s._allAdminUnitsInCurrentTenantCache=new i.Data.EntityCache({entityTypeName:Directories.DataModels.AdministrativeUnitType,sourceUri:function(){return s._getAllAdminUnitsUri},poll:!1,supplyData:function(n,t,i,r,u,e){return f.AuthenticatedToAdIbizaUx.trackedSupplyDataPerTargetObject(s._businessScenarios.other(),"ListAdminUnits","ListAdminUnits","Retrieves all admin units in current tenant",u.objectId,"Directory",n,t,i,r,u,e)},extendEntryLifetimes:!0});t.AdminUnit=s}))