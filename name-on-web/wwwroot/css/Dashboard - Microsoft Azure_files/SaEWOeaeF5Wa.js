var __extends=this&&this.__extends||
(function(){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var i in t)t.hasOwnProperty(i)&&(n[i]=t[i])};return function(t,i){function r(){this.constructor=t}n(t,i);t.prototype=i===null?Object.create(i):(r.prototype=i.prototype,new r)}})();
define("VersionControl/TypeScript/TFS.VersionControl.WebApi",["require","exports","o","$","Core/TypeScript/Generated/TFS.VersionControl.Common","Core/TypeScript/TFS.WebApi"],(function(n,t,i,r,u,f){"use strict";var e,o,s;i.defineProperty(t,"__esModule",{value:!0});e=(function(){function n(){}return n})();e.None="None";e.OneLevel="OneLevel";e.Full="Full";t.RecursionType=e;o=(function(n){function t(t){return n.call(this,t)||this}return __extends(t,n),t.prototype.beginGetAllRepositories=function(){return this._beginRequest({area:u.GitWebApiConstants.AreaName,locationId:u.GitWebApiConstants.RepositoriesLocationId,responseType:u.TypeInfo.GitRepository,responseIsCollection:!0})},t.prototype.beginGetRepositoryByName=function(n,t){return this._beginRequest({area:u.GitWebApiConstants.AreaName,locationId:u.GitWebApiConstants.ProjectRepositoriesLocationId,routeValues:{projectId:n,repositoryId:t},responseType:u.TypeInfo.GitRepository,responseIsCollection:!1})},t.prototype.beginGetProjectRepositories=function(n){return this._beginRequest({area:u.GitWebApiConstants.AreaName,locationId:u.GitWebApiConstants.ProjectRepositoriesLocationId,routeValues:{projectId:n},responseType:u.TypeInfo.GitRepository,responseIsCollection:!0})},t.prototype.beginGetGitRefs=function(n,t){return this._beginRequest({area:u.GitWebApiConstants.AreaName,locationId:u.GitWebApiConstants.RefsLocationId,routeValues:{repositoryId:n,refType:t},responseType:u.TypeInfo.GitRef,responseIsCollection:!0})},t.prototype.beginCreateRepository=function(n,t,i){return this._beginRequest({httpMethod:"POST",area:u.GitWebApiConstants.AreaName,locationId:u.GitWebApiConstants.RepositoriesLocationId,data:{project:{id:n,name:t},name:i},responseType:u.TypeInfo.GitRepository})},t.prototype.beginRenameRepository=function(n,t){return this._beginRequest({httpMethod:"PATCH",httpResponseType:"html",area:u.GitWebApiConstants.AreaName,locationId:u.GitWebApiConstants.RepositoriesLocationId,routeValues:{repositoryId:n},data:{name:t}})},t.prototype.beginDeleteRepository=function(n){return this._beginRequest({httpMethod:"DELETE",httpResponseType:"html",area:u.GitWebApiConstants.AreaName,locationId:u.GitWebApiConstants.RepositoriesLocationId,routeValues:{repositoryId:n}})},t.prototype.beginGetCommits=function(n,t){var r=this,i=jQuery.Deferred();return this._beginRequest2({httpMethod:"POST",area:u.GitWebApiConstants.AreaName,locationId:u.GitWebApiConstants.CommitsBatchLocationId,routeValues:{repositoryId:n},data:t,responseType:u.TypeInfo.GitCommitRef,responseIsCollection:!0}).done((function(n,t){var u=r._getLinkResponseHeaders(t);i.resolve({commits:n,startingCommitId:u.startingCommitId,hasMore:!!u.next,stillProcessing:(t.getResponseHeader("Still-Processing")||"").toLowerCase()==="true"})})).fail((function(){i.reject()})),i.promise()},t.prototype.beginPushChanges=function(n,t){var i={httpMethod:"POST",area:u.GitWebApiConstants.AreaName,locationId:u.GitWebApiConstants.PushesLocationId,routeValues:{repositoryId:n},data:t,responseType:u.TypeInfo.GitPush};return this._beginRequest(i)},t.prototype.beginGetItemTextContent=function(n,t){return this._beginRequest({httpResponseType:"text",headers:{Accept:"text/plain"},area:u.GitWebApiConstants.AreaName,locationId:u.GitWebApiConstants.ItemsLocationId,data:t,routeValues:{repositoryId:n}})},t.prototype.beginGetItems=function(n,t){var i={httpMethod:"POST",area:u.GitWebApiConstants.AreaName,locationId:u.GitWebApiConstants.ItemsBatchLocationId,routeValues:{repositoryId:n},data:t,responseType:u.TypeInfo.GitItemNew,responseIsCollection:!0};return this._beginRequest(i)},t.prototype.beginGetItem=function(n,t,i,r,u,f,o){return r===void 0&&(r=e.None),u===void 0&&(u=!1),f===void 0&&(f=!1),o===void 0&&(o=!1),this._beginGetItem(n,null,t,i,r,u,f,o,0,null)},t.prototype._beginGetItem=function(n,t,i,f,e,o,s,h,c,l){var v={path:t,scopePath:i,recursionLevel:e,includeContentMetadata:o,latestProcessedChange:s,download:h},a;return f&&(v=r.extend(f,v)),a={httpMethod:"GET",area:u.GitWebApiConstants.AreaName,locationId:u.GitWebApiConstants.ItemsLocationId,routeValues:{repositoryId:n},data:v,responseType:u.TypeInfo.GitItemNew,responseIsCollection:!0},c&&(a.rangeFrom=0,a.rangeTo=c),l&&(a.httpResponseType=l),this._beginRequest(a)},t.prototype.getContentUrl=function(n,t,i,f){var o=this,e;return f===void 0&&(f=!1),e=r.Deferred(),this._beginGetLocation(u.GitWebApiConstants.AreaName,u.GitWebApiConstants.ItemsLocationId).done((function(u){var s=r.extend({path:t},i);f&&(s.download="true");e.resolve(o._getRequestUrl(u,{repositoryId:n})+"?"+r.param(s))})),e.promise()},t.prototype.beginGetAllPullRequests=function(n,t,i,r,f,e,o,s){return this._beginRequest({area:u.GitWebApiConstants.AreaName,locationId:u.GitWebApiConstants.PullRequestsLocationId,routeValues:{repositoryId:n},data:{status:t,creatorId:i,reviewerId:r,$top:o,$skip:s,sourceRefName:f,targetRefName:e},responseType:u.TypeInfo.GitPullRequest,responseIsCollection:!0})},t.prototype.beginGetPullRequest=function(n,t){return this._beginRequest({area:u.GitWebApiConstants.AreaName,locationId:u.GitWebApiConstants.PullRequestsLocationId,routeValues:{repositoryId:n,pullRequestId:t},responseType:u.TypeInfo.GitPullRequest,responseIsCollection:!1})},t.prototype.beginCreatePullRequest=function(n,t,i,r,f,e){return this._beginRequest({httpMethod:"POST",area:u.GitWebApiConstants.AreaName,locationId:u.GitWebApiConstants.PullRequestsLocationId,routeValues:{repositoryId:n},data:{sourceRefName:t,targetRefName:i,Title:r,Description:f,Reviewers:this._buildReviewersArray(e)},responseType:u.TypeInfo.GitPullRequest,responseIsCollection:!1})},t.prototype.beginUpdatePullRequest=function(n,t,i){return this._beginRequest({httpMethod:"PATCH",area:u.GitWebApiConstants.AreaName,locationId:u.GitWebApiConstants.PullRequestsLocationId,routeValues:{repositoryId:n,pullRequestId:t},data:i,responseType:u.TypeInfo.GitPullRequest,responseIsCollection:!1})},t.prototype.beginUpdatePullRequestReviewer=function(n,t,i,r){return this._beginRequest({httpMethod:"POST",area:u.GitWebApiConstants.AreaName,locationId:u.GitWebApiConstants.PullRequestReviewersLocationId,routeValues:{repositoryId:n,pullRequestId:t,reviewerId:i},data:r,responseType:u.TypeInfo.IdentityRefWithVote,responseIsCollection:!0})},t.prototype.beginAddPullRequestReviewer=function(n,t,i,r){return this._beginRequest({httpMethod:"POST",area:u.GitWebApiConstants.AreaName,locationId:u.GitWebApiConstants.PullRequestReviewersLocationId,routeValues:{repositoryId:n,pullRequestId:t,reviewerId:i},data:r,responseType:u.TypeInfo.IdentityRefWithVote,responseIsCollection:!0})},t.prototype.beginDeletePullRequestReviewer=function(n,t,i){return this._beginRequest({httpMethod:"DELETE",area:u.GitWebApiConstants.AreaName,locationId:u.GitWebApiConstants.PullRequestReviewersLocationId,routeValues:{repositoryId:n,pullRequestId:t,reviewerId:i},responseType:u.TypeInfo.IdentityRefWithVote,responseIsCollection:!0})},t.prototype.beginGetBranchStatistics=function(n,t){return this._beginRequest({area:u.GitWebApiConstants.AreaName,locationId:u.GitWebApiConstants.BranchesStatsLocationId,routeValues:{repositoryId:t,projectId:n},responseType:u.TypeInfo.GitBranchStats,responseIsCollection:!0})},t.prototype._buildReviewersArray=function(n){var t=[];return r.each(n,(function(n,i){t[n]={id:{id:i}}})),t},t})(f.VssHttpClient);t.GitHttpClient=o;s=(function(n){function t(t){return n.call(this,t)||this}return __extends(t,n),t.prototype.beginGetProjectInfo=function(n){return this._beginRequest({area:u.TfvcConstants.AreaName,locationId:u.TfvcConstants.VersionControlProjectInfoLocationId,routeValues:{projectId:n},responseType:u.TypeInfo.VersionControlProjectInfo})},t.prototype.beginGetProjectInfos=function(){return this._beginRequest({area:u.TfvcConstants.AreaName,locationId:u.TfvcConstants.VersionControlProjectInfosLocationId,responseType:u.TypeInfo.VersionControlProjectInfo,responseIsCollection:!0})},t.prototype.beginGetItem=function(n,t){var i,f;return t===void 0&&(t=null),i={path:n},t&&(i=r.extend(i,t)),f={httpMethod:"GET",area:u.TfvcConstants.AreaName,locationId:u.TfvcConstants.TfvcItemsLocationId,data:i,responseType:u.TypeInfo.TfvcItem},this._beginRequest(f)},t.prototype.beginGetItems=function(n,t,i){var f,o;return t===void 0&&(t=null),i===void 0&&(i=e.None),f={scopePath:n,recursionLevel:i},t&&(f=r.extend(f,t)),o={httpMethod:"GET",area:u.TfvcConstants.AreaName,locationId:u.TfvcConstants.TfvcItemsLocationId,data:f,responseType:u.TypeInfo.TfvcItem,responseIsCollection:!0},this._beginRequest(o)},t.prototype.beginGetItemsBatch=function(n){var t={httpMethod:"POST",area:u.TfvcConstants.AreaName,locationId:u.TfvcConstants.TfvcItemBatchLocationId,data:n,responseType:u.TypeInfo.TfvcItem,responseIsCollection:!0};return this._beginRequest(t)},t.prototype.beginCreateChangeset=function(n){var t={httpMethod:"POST",area:u.TfvcConstants.AreaName,locationId:u.TfvcConstants.TfvcChangesetsLocationId,data:n,responseType:u.TypeInfo.TfvcChangeset,responseIsCollection:!1};return this._beginRequest(t)},t.prototype.beginGetItemTextContent=function(n){return this._beginRequest({httpResponseType:"text",headers:{Accept:"text/plain"},area:u.TfvcConstants.AreaName,locationId:u.TfvcConstants.TfvcItemsLocationId,data:n})},t.prototype.getContentUrl=function(n,t,i){var e=this,f;return i===void 0&&(i=!1),f=r.Deferred(),this._beginGetLocation(u.TfvcConstants.AreaName,u.TfvcConstants.TfvcItemsLocationId).done((function(u){var o=r.extend({path:n},t);i&&(o.download="true");f.resolve(e._getRequestUrl(u,{})+"?"+r.param(o))})),f.promise()},t.prototype.beginGetBranches=function(n){return this._beginRequest({httpMethod:"GET",area:u.TfvcConstants.AreaName,locationId:u.TfvcConstants.TfvcBranchesLocationId,routeValues:{project:n},responseType:u.TypeInfo.TfvcBranch,responseIsCollection:!0})},t})(f.VssHttpClient);t.TfvcHttpClient=s}))