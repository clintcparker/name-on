define("ReleaseManagement/TypeScript/Converters/ContinuousIntegrationModelToWebApiConverter",["require","exports","f","o","ReleaseManagement/TypeScript/Models/ContinuousIntegrationModel","ReleaseManagement/TypeScript/ContinuousDeliveryWebPlatform/Contracts","ReleaseManagement/TypeScript/Utilities/LinuxRuntimeStackUtility","ReleaseManagement/TypeScript/Utilities/AppServiceArmApiManager"],(function(n,t,i,r,u,f,e,o){"use strict";var h,s;r.defineProperty(t,"__esModule",{value:!0});h="ResourceTemplateProviderBase|{0}";s=(function(){function n(){}return n.getProvisioningConfiguration=function(n,t){var r=this,o=i.Base.Security.getUserInfo(),s=i.Azure.getSubscriptionInfo(t.subscriptionId),h=i.Base.Security.getAuthorizationToken({resourceName:"self"}),u=null,f;return!i.isNullOrUndefined(n.imageConfiguration)&&n.imageConfiguration()&&(u=JSON.parse(n.imageConfiguration().frameworkVersion())),f=e.LinuxRuntimeStackUtility.getDotNetCoreSDKVersion(u),Q.all([o,s,h,f]).spread((function(i,u,f,e){return r._dotNetCoreSDKVersion=e,r.getProvisioningConfigurationInternal(n,t,i,u,f)}))},n.getProvisioningConfigurationInternal=function(n,t,i,r,u){var e={id:null,targets:[{provider:f.DeploymentTargetProvider.Azure,type:this.getAppServiceType(t),environmentType:f.TargetEnvironmentType.Production,friendlyName:"Production",subscriptionId:t.subscriptionId,subscriptionName:r.displayName,tenantId:i.directoryId,resourceIdentifier:t.name,location:t.location,resourceGroupName:t.properties.resourceGroup,authorizationInfo:{parameters:{Authorization:u.header},scheme:"Headers"},createOptions:null,slotSwapConfiguration:null,auxiliaryTargets:[]}],ciConfiguration:{project:{name:this.getProjectName(n)},buildDefinition:null,queuedBuild:null,releaseDefinition:null,result:null},source:{type:f.DeploymentSourceType.CodeRepository,repository:{type:this.getCodeRepositoryType(n.sourceConfiguration().sourceProviderType(),n.sourceConfiguration().repository()),id:n.sourceConfiguration().repository()?n.sourceConfiguration().repository().id:n.sourceConfiguration().repositoryUrl(),defaultBranch:n.sourceConfiguration().branch(),authorizationInfo:this.getSourceRepoAuthorization(n)},buildConfiguration:this.getBuildConfiguration(n)},pipelineTemplateId:null,pipelineTemplateParameters:null,repository:null},h,c,s,o;return n.deploymentSlotConfiguration()&&n.deploymentSlotConfiguration().useSlot&&n.deploymentSlotConfiguration().useSlot()&&(h={slotName:n.deploymentSlotConfiguration().createSlot()?n.deploymentSlotConfiguration().createSlotName():n.deploymentSlotConfiguration().selectSlotName()},c=e.targets[0],c.slotSwapConfiguration=h),n.testEnvironmentConfiguration()&&n.testEnvironmentConfiguration().configureTestEnvironment&&n.testEnvironmentConfiguration().configureTestEnvironment()&&(s={provider:f.DeploymentTargetProvider.Azure,type:this.getAppServiceType(t),friendlyName:"Load Test",environmentType:f.TargetEnvironmentType.Test,subscriptionId:t.subscriptionId,subscriptionName:r.displayName,tenantId:i.directoryId,resourceIdentifier:n.testEnvironmentConfiguration().createEnvironment()?n.testEnvironmentConfiguration().appName():n.testEnvironmentConfiguration().selectedEnvironment(),createOptions:null,location:t.location,resourceGroupName:t.properties.resourceGroup,authorizationInfo:{parameters:{Authorization:u.header},scheme:"Headers"},slotSwapConfiguration:null,auxiliaryTargets:[]},n.testEnvironmentConfiguration().createEnvironment()&&(s.createOptions={appServicePlanName:n.testEnvironmentConfiguration().appServicePlanName(),appServicePricingTier:t.properties.sku,baseAppServiceName:t.name}),o=[],o.push(s),o.push(e.targets[0]),e.targets=o),e},n.getProjectName=function(n){return n.sourceConfiguration().sourceProviderType()===u.ProviderType.VSTS?n.sourceConfiguration().project().name():n.buildConfiguration&&n.buildConfiguration()?n.buildConfiguration().createNewAccount()?"MyFirstProject":n.buildConfiguration().selectedProject()?n.buildConfiguration().selectedProject().name():null:n.teamConfiguration&&n.teamConfiguration()?n.teamConfiguration().createNewAccount()?"MyFirstProject":n.teamConfiguration().selectedProject()?n.teamConfiguration().selectedProject().name():null:null},n.getAppServiceType=function(n){return n.properties.reserved?f.AzureResourceType.LinuxAppService:f.AzureResourceType.WindowsAppService},n.getCodeRepositoryType=function(n,t){switch(n){case u.ProviderType.VSTS:return t.sourceControlType===u.SourceControlType.Git?"TfsGit":"TfsVersionControl";case u.ProviderType.GitHub:return"GitHub";case u.ProviderType.LocalGit:return"LocalGit";case u.ProviderType.ExternalGit:return"Git"}},n.getBuildConfiguration=function(n){var h,c,t,i,l;if(n.buildConfiguration()){var a=n.buildConfiguration().webAppFramework(),r=this.getApplicationType(n.buildConfiguration()),o=n.buildConfiguration().workingDirectory();switch(a){case u.WebAppFramework.Python:return h=this.getPythonFramework(n.buildConfiguration()),c={type:r,workingDirectory:o,pythonFramework:h,pythonExtensionId:n.buildConfiguration().pythonVersion()},h==f.PythonFrameworkType.Django?c.djangoSettingsModule=n.buildConfiguration().djangoSettingsModule():h==f.PythonFrameworkType.Flask&&(c.flaskProjectName=n.buildConfiguration().flaskProjectName()),c;case u.WebAppFramework.Node:return(i=n.buildConfiguration().nodeTaskRunner(),i==u.TaskRunner.None)?{type:r,workingDirectory:o}:{type:r,workingDirectory:o,nodeJsTaskRunner:i==u.TaskRunner.Gulp?f.NodeJsTaskRunnerType.Gulp:f.NodeJsTaskRunnerType.Grunt};case u.WebAppFramework.Go:return t=n.buildConfiguration().goVersion(),{type:r,workingDirectory:o,version:t};default:return{type:r,workingDirectory:o}}}else{if(n.imageConfiguration&&n.imageConfiguration().registryType&&n.imageConfiguration().registryType()==u.ImageSource.Builtin){var s=this.getApplicationType(n.imageConfiguration()),v=JSON.parse(n.imageConfiguration().frameworkVersion()),t=e.LinuxRuntimeStackUtility.getDefaultMinorVersion(v);switch(n.imageConfiguration().webAppFramework()){case u.WebAppFramework.AspNetCore:return{type:s,workingDirectory:"",version:this._dotNetCoreSDKVersion,runtimeVersion:t,startupCommand:n.imageConfiguration().startupCommand()};case u.WebAppFramework.Node:return(i=n.imageConfiguration().nodeTaskRunner(),l=n.imageConfiguration().startupCommand(),i==u.TaskRunner.None)?{type:s,workingDirectory:n.imageConfiguration().workingDirectory(),version:t,startupCommand:l}:{type:s,workingDirectory:n.imageConfiguration().workingDirectory(),nodeJsTaskRunner:i==u.TaskRunner.Gulp?f.NodeJsTaskRunnerType.Gulp:f.NodeJsTaskRunnerType.Grunt,version:t,startupCommand:l};case u.WebAppFramework.PHP:return{type:s,workingDirectory:n.imageConfiguration().workingDirectory(),version:t};case u.WebAppFramework.Ruby:return{type:s,rubyFramework:f.RubyFrameworkType.Rails,workingDirectory:n.imageConfiguration().workingDirectory(),version:t,startupCommand:n.imageConfiguration().startupCommand()}}}return{type:f.ApplicationType.DockerImage,startupCommand:n.imageConfiguration().startupCommand(),workingDirectory:"",image:n.imageConfiguration().imageTags(),dockerfilePath:n.imageConfiguration().dockerFilePath(),buildContext:"",registry:{type:f.ContainerRegistryType.Private,registryUrl:n.imageConfiguration().serverUrl()||"https://index.docker.io/v1/",authorizationInfo:{scheme:"UsernamePassword",parameters:{username:n.imageConfiguration().username(),password:n.imageConfiguration().password()}}}}}},n.getApplicationType=function(n){switch(n.webAppFramework()){case u.WebAppFramework.AspNetWap:return f.ApplicationType.AspNetWap;case u.WebAppFramework.AspNetCore:return f.ApplicationType.AspNetCore;case u.WebAppFramework.Node:return f.ApplicationType.NodeJS;case u.WebAppFramework.PHP:return f.ApplicationType.PHP;case u.WebAppFramework.Python:return f.ApplicationType.Python;case u.WebAppFramework.StaticWebapp:return f.ApplicationType.StaticWebapp;case u.WebAppFramework.Ruby:return f.ApplicationType.Ruby;case u.WebAppFramework.Go:return f.ApplicationType.Go}},n.getPythonFramework=function(n){switch(n.pythonFramework()){case u.PythonFramework.Bottle:return f.PythonFrameworkType.Bottle;case u.PythonFramework.Django:return f.PythonFrameworkType.Django;case u.PythonFramework.Flask:return f.PythonFrameworkType.Flask}},n.getSourceRepoAuthorization=function(n){var t;return n.sourceConfiguration().sourceProviderType()===u.ProviderType.GitHub?{scheme:"PersonalAccessToken",parameters:{AccessToken:n.oAuthSetupResult().SetupToken}}:n.sourceConfiguration().sourceProviderType()===u.ProviderType.ExternalGit?{scheme:"UsernamePassword",parameters:{username:n.sourceConfiguration().isPrivateGitRepository()?n.sourceConfiguration().username():"",password:n.sourceConfiguration().isPrivateGitRepository()?n.sourceConfiguration().password():""}}:null},n})();s._appServiceArmManager=new o.AppServiceArmApiManager;s._dotNetCoreSDKVersion="";t.provisioningConfigurationConverter=s}))