@page "/"
@using name_on_core
@using Microsoft.JSInterop

<div class="starter-template" id="uniqueName">
    <h1 id="spinners" style="display:@(IsLoading ? "inline-block" : "none")">
        <div class="spinner-grow" role="status"><span class="sr-only">Loading...</span></div>
        <div class="spinner-grow" role="status"></div>
        <div class="spinner-grow" role="status"></div>
    </h1>
    <h1 id="h1A" style="display:@(!IsLoading ? "block" : "none")">@CurrentName</h1>
    <hr />
    <button class="btn btn-primary" @onclick="GenerateName" disabled="@IsLoading">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-clockwise" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z" />
            <path d="M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z" />
        </svg>
    </button>
    <button class="btn btn-secondary" @onclick="CopyToClipboard" disabled="@IsLoading">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clipboard" viewBox="0 0 16 16">
            <path d="M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z" />
            <path d="M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z" />
        </svg>
    </button>
</div>

@code {
    private Namer _namer = new();
    private string CurrentName = string.Empty;
    private bool IsLoading = true;

    [Inject]
    private IJSRuntime JS { get; set; } = default!;

    protected override void OnInitialized()
    {
        GenerateName();
    }

    private void GenerateName()
    {
        IsLoading = true;
        StateHasChanged();
        CurrentName = _namer.Gen();
        IsLoading = false;
    }

    private async Task CopyToClipboard()
    {
        if (!string.IsNullOrEmpty(CurrentName))
        {
            await JS.InvokeVoidAsync("navigator.clipboard.writeText", CurrentName);
        }
    }
}
